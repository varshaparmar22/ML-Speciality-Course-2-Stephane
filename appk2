-Glue ==== de-duplication === ml feature
-network latency ==== outside aws environment latency(user to sm endpoint vice-versa)
-overhead latency  ==== inside was environment latency (sm endpoint to model container vice-versa)
-conditioned disparcity ====> condition should be followed to check
-logloss = quality of probability of output, 0 is best, costfun in logistic regre,===
specify model make incorect prediction with high probability. binary & multiclass model
-lineage tracking === which dataset, training job, Hp etc. are producing given model - 
auditing & reproducibility
- sm pipeline=== contional steps can be added, this or that
- fastfile mode === many small file = rapid access, low latency, only access data from s3 
- lambda = lightweight models only can be deployed not recommandation kind
- transparent mmodel = how input convert into output ==== optimization should be transparent 
- sm script mode == 1.install custom lib(if any) 2. use your training script, requirement.txt, model code
3. use sm's prebuit container with above setup to launch container on endpoint
- Sm pipeline has callback step for glue, for emr direct step is there, many other steps are there too
- varying traffic --- auto scaling
- choose report, alert if only they are specified to implement
- attach the tag for cost management:
1. create tag, 
2. attach tag to resource, 
3. tie up those tag in cost allocation
- Parquet : big data, columnar, binary, compression, splittable, fast query
- avaro : serialization
- Credit bureau data : check person's financial behaviour
- Fsx for luster : sub milisec latency, hundreds of gigabytes/sec tp, millions of IOPS, high computing
- KDS : data ingestion/storage
- MSAF : processing, transforming, filtering, enrichment(like with sql)
- KDF : ingestion & deliver -  no retension
- Kafka : mainly use for transfering real-time data between apps & systems
- check pattern => bar plot, check distribution and frequency => histogram   (bar/pattern, fd/histogram)
- bedrock provide unified api, not distinct api for fm. means one api just chane fm id to get access
-  private customization=> fine tune FM as per need
- multi-colinearity : statical approach to check co-relation between feature not visualization
- TVD : maximum divergence/disparcity in outcome distribution between diff demographic group
- KUllback liberal divergance : related to probabilty
- EFS : not provide low latency and high TP
- snowcone : 14 tb, snowball : 100 tb, snowmobile : 100 Pb
- Amazon S3 Transfer Acceleration : use optimized network protocols and AWS edge locations, acc s3 transfer
- Parquet = structured and semi-structured data, NOT unstructured data. NOt for realtime data processing
- JSON line === for realtime data processing is best
- JSON === wont improve processing performance as it has hierarchical structure
- shard provides a fixed amount of throughput, add more shard to handle high volume of data fast
-AWS Global Accelerator : static IP add, improve app's availability
- AWS DataSync : use for data migration
- SCPs = guardrails on actions, a user or role can do.
- AWS Resource Access Manager (RAM)  = cross account resource access
- execution roles are crucial for granting the required permissions for SageMaker components to 
interact with other AWS services, such as Amazon S3
- inline policy : to specific thing give permission, like particular domain, in sm studio many domains can work
together
- visual tool : minimal operational effort
- Virtual Drift in model : only when infrastructure or deployment changes.
- Access Denied error = 403
- 401 Unauthorized:MissingAuthenticationTokenException
- 400 Bad Request: IncompleteSignatureException, ValidationException, InvalidAction










